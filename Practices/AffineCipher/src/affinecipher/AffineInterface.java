/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package affinecipher;

import java.awt.List;
import java.util.ArrayList;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author rsagr
 */
public class AffineInterface extends javax.swing.JFrame {

    /**
     * Creates new form AffineInterface
     */
    public AffineInterface() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea3 = new javax.swing.JTextArea();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Dialog", 2, 18)); // NOI18N
        jLabel1.setText("Affine Cipher ");

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel2.setText("Select File");

        jButton1.setText("Browse");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jLabel4.setText("Enter the value of N (Alphabet), Alpha and Beta");

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jLabel5.setText("Alpha");

        jLabel6.setText("Beta");

        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jScrollPane2.setViewportView(jTextArea2);

        jButton2.setText("Encrypt");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Decrypt");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel7.setText("N");

        jTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField3ActionPerformed(evt);
            }
        });

        jTextArea3.setColumns(20);
        jTextArea3.setRows(5);
        jScrollPane3.setViewportView(jTextArea3);

        jLabel8.setFont(new java.awt.Font("Lucida Calligraphy", 1, 14)); // NOI18N
        jLabel8.setText("Encryption and Decryption formulas");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(613, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(106, 106, 106))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton1)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(98, 98, 98)
                                .addComponent(jLabel4))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(99, 99, 99)
                                .addComponent(jButton2)
                                .addGap(18, 18, 18)
                                .addComponent(jButton3))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(58, 58, 58)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(73, 73, 73)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jLabel7)
                                        .addGap(45, 45, 45))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(55, 55, 55)
                                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(12, 12, 12)
                                        .addComponent(jLabel5)
                                        .addGap(89, 89, 89)
                                        .addComponent(jLabel6))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(31, 31, 31)
                                .addComponent(jLabel8)))
                        .addGap(29, 29, 29)))
                .addContainerGap(40, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jLabel1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jButton1)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7))
                        .addGap(1, 1, 1)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton2)
                            .addComponent(jButton3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                        .addComponent(jLabel8)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        //File Selection
        JFileChooser jf = new JFileChooser();
        int a = jf.showOpenDialog(null);
        System.out.println(a);
        if(a == JFileChooser.APPROVE_OPTION){
            FileReader bf = null;
            try {
                ff = jf.getSelectedFile();
                JOptionPane.showMessageDialog(rootPane, "Nombre del archivo \n" + ff.getName());
                //Lectura del archivo y escritura en la plantilla
                bf = new FileReader(ff);
                jTextArea2.read(bf, "");
            } catch (Exception ex) {
                Logger.getLogger(AffineInterface.class.getName()).log(Level.SEVERE, null, ex);
            } finally {
                try {
                    bf.close();
                } catch (IOException ex) {
                    Logger.getLogger(AffineInterface.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
       }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        String a,number;
        int alpha,i,n;
        number = jTextField3.getText();
        n = Integer.parseInt(number);
        ArrayList<Integer> fact = new ArrayList<Integer>();
        fact = factors(n);
        a = jTextField1.getText();
        alpha = Integer.parseInt(a);
        alpha = multiInverse(alpha,n,fact);
        i = serch(alpha);
        if(i == -1){
            JOptionPane.showMessageDialog(rootPane, "Enter an other value of alpha\nThe value "+alpha+" is no accepted");
        }
        else
            encrypt();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // Decryption method
        String a;
        int alpha,i;
        a = jTextField1.getText();
        alpha = Integer.parseInt(a);
        i = serch(alpha);
        if(i == -1){
            JOptionPane.showMessageDialog(rootPane, "Enter an other value of alpha\nThe value "+alpha+" is no accepted");
        }
        else
            decrypt();
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField3ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    /**
     * @param args the command line arguments
     */
    File ff;
    String alphafet = "abcdefghijklmnopqrstuvwxyz";
    static int[] alpha1;
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AffineInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AffineInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AffineInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AffineInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AffineInterface().setVisible(true);
            }
        });
    }
    public static ArrayList<Integer> factors(int n){
        System.out.println("Numero a descomponer en factores "+n);
        ArrayList<Integer> factor = new ArrayList<Integer>();
        int d = 2;
        while(n!= 1){
            if(n%d == 0){
                if(!factor.contains(d)){
                     factor.add(d);
                }
                n = n/d;
            }
            else{
                d++;
            }
        }
        System.out.println(factor);
        return factor;
    } 
    public void alphaNumbers(int n,ArrayList<Integer> factors){
        int i,j;
        ArrayList<Integer> alphaca = new ArrayList<Integer>();
        System.out.println(factors.size());
        for(i = 0; i < n; i++){
            for(j = 0; j < factors.size(); j++){
                if((i%factors.get(j)) != 0){
                    if(!alphaca.contains(i))
                        alphaca.add(i);
                }
                j++;
            }
        }
        alpha1 = new int[alphaca.size()];
        for(i = 0; i < alphaca.size(); i++)
            alpha1[i] = alphaca.get(i);
    }
    public int  inverse(int num,int module){
        int number = num + module;
        while (number < 0){
            number =number + module;
        }
        return number;
    }
    public int multiInverse(int num,int n,ArrayList<Integer> factors){
        alphaNumbers(n,factors);
        System.out.println("Alpha = "+num);
        int i = 0;
        for(i = 0; i < alpha1.length; i++){
            System.out.print(alpha1[i]+" ");
        }
        for(i = 0; i < alpha1.length;i++){
            if((num * alpha1[i])%n == 1){
                System.out.println(num +"*"+"alpha1"+alpha1[i]);
                num = alpha1[i];
            }
        }
        System.out.println("num: "+num);
        return num;
    }
    public int gcd(int a, int n){
        /**
         * This validation help to calculate the greatest common divisor of two 
         * numbers using the Eclides Algorithm 
         */
        int t;
        while(a > 0){
           t = a;
           a = n % a;
           n = t;
        }
        return n;
    }  
    public static long[] extended_euclides(long a, long n){
        long x,y;
        long result[] = new long[2];
        if (n == 0){
            a = a;
            result[0] = 0;
            result[1] = 0;
        } else{
	    long x2 = 1, x1 = 0, y2 = 0, y1 = 1;
	    long q = 0, r = 0;		
	    while(n>0)
	    {
	    	q = (a/n);
	    	r = a - q*n;
	    	x = x2-q*x1;
	    	y = y2 - q*y1;
	    	a = n;
	    	n = r;
	    	x2 = x1;
	    	x1 = x;
	    	y2 = y1;
	    	y1 = y;
            }	
	    result[0] = x2;
            result[1] = y2;
        }
        return result;
    }
    public void encrypt(){
         PrintWriter EncryptOut = null;
        try {
            String a, b,line,nAlphabet;
            //Funtion to write in the FILE
            EncryptOut = new PrintWriter("out.txt");
            int alpha, beta,n;
            a = jTextField1.getText();
            b = jTextField2.getText();
            nAlphabet = jTextField3.getText();
            if(a.matches("[0-9]+") && b.matches("[0-9]+") && nAlphabet.matches("[0-9]+")){
                alpha = Integer.parseInt(a);
                beta = Integer.parseInt(b);
                n = Integer.parseInt(nAlphabet);
                if(gcd(alpha,n) != 1){
                    JOptionPane.showMessageDialog(rootPane, "Enter a diferent value of alpha or N");
                }else{
                    long r[] = new long[1];
                    r = extended_euclides(alpha,n);
                    jTextArea3.append("Encryption\n C = "+alpha+"p"+" + "+beta +" mod "+n+"\n");
                }
                FileReader lectura = null;
                try {
                    JOptionPane.showMessageDialog(rootPane, "The entered value is \nalpha = "+alpha+"\nbeta =  "+beta);
                    lectura = new FileReader(ff);
                    BufferedReader buffer = new BufferedReader(lectura);
                    StringBuilder cadena = new StringBuilder();
                    int i,p;
                    while((line = buffer.readLine()) != null){
                        //here where the algorithm takes action
                        line = line.toLowerCase();
                        for(i = 0; i < line.length(); i++){
                            p = alphafet.indexOf(line.charAt(i));
                            if(p != -1){
                                cadena.append(alphafet.charAt(((alpha)*(p) + beta)%26));
                            }
                        }
                        System.out.println(cadena.toString().toUpperCase());
                        EncryptOut.write(cadena.toString().toUpperCase());
                        //salidaCifrada.println();
                        cadena.setLength(0);
                    }
                    EncryptOut.flush();
                } catch (FileNotFoundException ex) {
                    JOptionPane.showMessageDialog(rootPane,"File not found");
                } catch (IOException ex) {
                    Logger.getLogger(AffineInterface.class.getName()).log(Level.SEVERE, null, ex);
                } finally {
                    try {
                        lectura.close();
                    } catch (IOException ex) {
                        Logger.getLogger(AffineInterface.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
            else{
                JOptionPane.showMessageDialog(rootPane, "Invalid data, please enter numeric values");
            }
        } catch (FileNotFoundException ex) {
            Logger.getLogger(AffineInterface.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            EncryptOut.close();
        }
        ff = new File("out.txt");
        //Write in the jTextArea1
        if(ff.getPath() != null){
            try {
                FileReader bf = null;
                bf = new FileReader(ff);
                try {
                    jTextArea1.read(bf, "");
                } catch (IOException ex) {
                    Logger.getLogger(AffineInterface.class.getName()).log(Level.SEVERE, null, ex);
                }finally{
                try {
                    bf.close();
                } catch (IOException ex) {
                    Logger.getLogger(AffineInterface.class.getName()).log(Level.SEVERE, null, ex);
                }
                }
                
            } catch (FileNotFoundException ex) {
                Logger.getLogger(AffineInterface.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }
    public void decrypt(){
        System.out.println(ff.getPath());
        PrintWriter EncryptOut = null;
        try {
            String a, b,line,nAlphabet;
            //Funtion to write in the FILE
            EncryptOut = new PrintWriter("outDecrypt.txt");
            int alpha, beta,n,index;
            a = jTextField1.getText();
            b = jTextField2.getText();
            nAlphabet = jTextField3.getText();
            if(a.matches("[0-9]+") && b.matches("[0-9]+") & nAlphabet.matches("[0-9]+")){
                FileReader lectura = null;
                try {
                    alpha = Integer.parseInt(a);
                    beta = Integer.parseInt(b);
                    n = Integer.parseInt(nAlphabet);
                if(gcd(alpha,n) != 1){
                    JOptionPane.showMessageDialog(rootPane, "Enter a diferent value of alpha or N");
                }else{
                    long r[] = new long[1];
                    r = extended_euclides(alpha,n);
                }
                    JOptionPane.showMessageDialog(rootPane, "The entered value is \nalpha = "+alpha+"\nbeta =  "+beta);
                    //INVERSO ADITIVO 
                    beta = inverse(-beta,n);
                    //INVERSO MULTIPLICATIVO 
                    System.out.println("Inverso Multi");
                    index = serch(alpha);
                    ArrayList<Integer> factors = new ArrayList<Integer>();
                    factors = factors(n);
                    System.out.println("FACTTTORS alpha = "+alpha+"\nn = "+n);
                    System.out.println(factors);
                    alpha = multiInverse(alpha,n,factors);
                    beta = (alpha*beta)%n;
                    jTextArea3.append("Decryption\n p = "+alpha+"p"+" + "+beta +" mod "+n+"\n");
                    lectura = new FileReader(ff);
                    BufferedReader buffer = new BufferedReader(lectura);
                    StringBuilder cadena = new StringBuilder();
                    int i,p;
                    while((line = buffer.readLine()) != null){
                        //here where the algorithm takes action
                        line = line.toLowerCase();
                        for(i = 0; i < line.length(); i++){
                            p = alphafet.indexOf(line.charAt(i));
                            if(p != -1){
                                cadena.append(alphafet.charAt(((alpha)*((p) + beta))%26));
                            }
                        }
                        System.out.println(cadena.toString().toLowerCase());
                        EncryptOut.write(cadena.toString().toLowerCase());
                        //salidaCifrada.println();
                        cadena.setLength(0);
                    }
                    EncryptOut.flush();
                } catch (FileNotFoundException ex) {
                    JOptionPane.showMessageDialog(rootPane,"File not found");
                } catch (IOException ex) {
                    Logger.getLogger(AffineInterface.class.getName()).log(Level.SEVERE, null, ex);
                } finally {
                    try {
                        lectura.close();
                    } catch (IOException ex) {
                        Logger.getLogger(AffineInterface.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
            else{
                JOptionPane.showMessageDialog(rootPane, "Invalid data, please enter numeric values");
            }
        } catch (FileNotFoundException ex) {
            Logger.getLogger(AffineInterface.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            EncryptOut.close();
        }
        ff = new File("outDecrypt.txt");
        //Write in the jTextArea1
        if(ff.getPath() != null){
            try {
                FileReader bf = null;
                bf = new FileReader(ff);
                try {
                    jTextArea1.read(bf, "");
                } catch (IOException ex) {
                    Logger.getLogger(AffineInterface.class.getName()).log(Level.SEVERE, null, ex);
                }finally{
                try {
                    bf.close();
                } catch (IOException ex) {
                    Logger.getLogger(AffineInterface.class.getName()).log(Level.SEVERE, null, ex);
                }
                }
                
            } catch (FileNotFoundException ex) {
                Logger.getLogger(AffineInterface.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }
    public int serch(int alpha){
        int index = -1,i;
        for(i = 0; i < alpha1.length; i++){
            if(alpha1[i] == alpha){
                index = i;
            }
        }
        return index;
    }
    public static int phi(int n){
        ArrayList<Integer> factors = new ArrayList<Integer>();
        int result = n;
        int p;
        // Consider all prime factors of n and for every prime 
        // factor p, multiply result with (1 - 1/p) 
        for (p = 2; p * p <= n;p++) { 
          
        // Check if p is a prime factor. 
            if (n % p == 0) { 
                // If yes, then update n and result 
                while (n % p == 0) 
                    n /= p; 
                result -= result / p; 
            } 
        } 
  
        // If n has a prime factor greater than sqrt(n) 
        // (There can be at-most one such prime factor) 
        if (n > 1) 
            result -= result / n; 
        return result;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextArea jTextArea3;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    // End of variables declaration//GEN-END:variables
}
